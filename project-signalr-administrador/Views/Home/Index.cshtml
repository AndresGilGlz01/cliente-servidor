@model project_signalr_administrador.Models.ViewModel.Home.IndexViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/styles/normalize.css" />
    <link rel="stylesheet" href="~/styles/main.css" />
    <script src="https://kit.fontawesome.com/abb25ecaa9.js" crossorigin="anonymous"></script>
    <title>Sistema de turnos - Panel de usuario</title>
</head>
<body class="caja">
    <style>
        ::-webkit-scrollbar {
            width: 10px;
        }

        ::-webkit-scrollbar-track {
            background: #d6d6d680;
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: #0f0c31;
            border-radius: 20px;
        }
    </style>
    <div class="controlpanel">
        <div class="controlpanel-titulo">
            <div class="titulos">
                <h1>Sistema de turnos</h1>
                <p>Caja actual - <span class="caja-seleccionada-text">Sin seleccionar</span></p>
            </div>
            <div class="usuario">
                <a asp-controller="home" asp-action="historial">Historial</a>
                <a asp-controller="home" asp-action="registro">registrar</a>
                <i class="fa-solid fa-gear"></i>
                <i class="fa-solid fa-chart-simple"></i>
                <img src="~/img/profilepicture.jpg" />
                <a href="~/logout">Cerrar sesión</a>
            </div>
        </div>

        <div class="controlpanel-atendiendo">

            <div class="turno-actual">
                <div class="flex">
                    <h1>Turno actual</h1>
                    <h2>Folio: <span>A12345</span></h2>
                </div>

                <p>Fecha: <span>4 - Junio - 2024</span></p>
                <p>Hora: <span>5:12 P.M.</span></p>
            </div>

            <div class="acciones">
                <h1>Próximo Turno</h1>
                <div onclick="OnNextTurno()">
                    <input type="submit" value="Siguiente" />
                </div>
            </div>

            <div class="turnos-siguientes">
                <h1>Proximos turnos</h1>
            </div>

        </div>
    </div>

    <div class="modal" id="estadisticas">
        <div class="estadisticas">
            <h1>Estadisticas</h1>

            <div class="grupo-estadisticas">
                <div class="estadistica">
                    <h3>Gente en espera</h3>
                    <div>
                        <i class="fa-solid fa-user-clock"></i>
                        <p class="estadistica-pendientes">Sin definir</p>
                    </div>
                </div>

                <div class="estadistica">
                    <h3>Gente en ventanilla</h3>
                    <div>
                        <i class="fa-solid fa-user-check"></i>
                        <p class="estadistica-atendiendo">Sin definir</p>
                    </div>
                </div>

                <div class="estadistica">
                    <h3>Clientes en total hoy</h3>
                    <div>
                        <i class="fa-solid fa-users"></i>
                        <p class="estadistica-atendidos">Sin definir</p>
                    </div>
                </div>

                <div class="estadistica">
                    <h3>Caja más activa hoy</h3>
                    <div>
                        <i class="fa-solid fa-fire"></i>
                        <p class="estadistica-mas-frecuenada">Sin definir</p>
                    </div>
                </div>
                <div class="estadistica">
                    <h3>Promedio de espera de hoy</h3>
                    <div>
                        <i class="fa-solid fa-fire"></i>
                        <p class="estadistica-promedio-hoy">Sin definir</p>
                    </div>
                </div><div class="estadistica">
                    <h3>Promedio de espera de esta hora</h3>
                    <div>
                        <i class="fa-solid fa-fire"></i>
                        <p class="estadistica-promedio-hora">Sin definir</p>
                    </div>
                </div>
                <div class="estadistica">
                    <h3>Volumen de clientes esta hora</h3>
                    <div>
                        <i class="fa-solid fa-fire"></i>
                        <p class="estadistica-volumen-hora">Sin definir</p>
                    </div>
                </div>
                <div class="estadistica">
                    <h3>Caja menos activa hoy</h3>
                    <div>
                        <i class="fa-solid fa-snowflake"></i>
                        <p class="estadistica-menos-frecuentada">Sin definir</p>
                    </div>
                </div>

            </div>
        </div>
    </div>

    <div class="modal" id="caja">
        <div class="elegir-caja">
            <h1>Seleccione la caja en la que esta iniciando</h1>
            <div>
                <select name="caja" id="opt-caja" onchange="onSelectCaja()">
                    <option value="0" selected>Seleccione una caja</option>
                </select>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const toggleEstadisticas = document.querySelector('.fa-chart-simple');
            const toggleCaja = document.querySelector('.fa-gear');

            const estadisticasDiv = document.getElementById('estadisticas');
            const cajaDiv = document.getElementById('caja');

            const estadisticadiv = document.querySelector('.estadisticas');
            const cajaElegir = document.querySelector('.elegir-caja');

            toggleEstadisticas.addEventListener('click', function (event) {
                estadisticasDiv.style.visibility = 'visible';
                event.stopPropagation(); // Para evitar que el clic en el botón cierre el div
            });

            toggleCaja.addEventListener('click', function (event) {
                cajaDiv.style.visibility = 'visible';
                event.stopPropagation(); // Para evitar que el clic en el botón cierre el div
            });

            document.addEventListener('click', function (event) {
                const target = event.target;
                if (!estadisticadiv.contains(target) && target !== toggleEstadisticas) {
                    estadisticasDiv.style.visibility = 'hidden';
                }
                if (!cajaElegir.contains(target) && target !== toggleCaja) {
                    cajaDiv.style.visibility = 'hidden';
                }
            });
        });
    </script>
    <script>
        let cajaSeleccionada;

        function HideTurnoActual() {
            let div = document.querySelector(".turno-actual");

            div.style.visibility = "collapse";
        }

        function ShowTurnoActual() {
            let div = document.querySelector(".turno-actual");

            div.style.visibility = "visible";
        }

        async function GetCajasAvailed() {
            const response = await fetch("https://api.signalr.labsystec.net/api/caja", {
                method: "GET",
                headers: {
                    'Authorization': 'Bearer ' + "@Context.Session.GetString("token")"
                }
            });

            if (response.ok) {
                let data = await response.json();

                const cajaActual = document.querySelector("#opt-caja");
                data.forEach(caja => {
                    if (caja.administrador == "@Context.Session.GetString("usuario")") {
                        if (caja.abierta) {
                            document.querySelector(".caja-seleccionada-text").innerText = `Caja ${caja.numeroCaja} - Abierta - `;
                            let link = document.createElement("a");
                            link.href = "javascript:";
                            link.innerText = "Cerrar";
                            link.addEventListener("click", async () => {
                                await connection.invoke("ToggleCaja", caja.numeroCaja);
                            });

                            document.querySelector(".caja-seleccionada-text").appendChild(link);
                        }
                        else {
                            document.querySelector(".caja-seleccionada-text").innerText = `Caja ${caja.numeroCaja} - Cerrada - `;
                            let link = document.createElement("a");
                            link.href = "javascript:";
                            link.innerText = "Abrir";
                            link.addEventListener("click", async () => {
                                await connection.invoke("ToggleCaja", caja.numeroCaja);
                            });

                            document.querySelector(".caja-seleccionada-text").appendChild(link);
                            HideTurnoActual();
                        }

                        cajaSeleccionada = caja.numeroCaja;
                        GetCurrentTurno(caja.numeroCaja);
                        ShowTurnoActual();
                    } else {
                        HideTurnoActual();
                    }

                    if (!caja.administrador) {
                        let option = document.createElement("option");

                        option.value = caja.id;
                        option.text = `Caja ${caja.numeroCaja}`;

                        cajaActual.appendChild(option);
                    }
                });

                if (cajaSeleccionada) {
                    let siguiente = document.querySelector(".acciones");
                    siguiente.style.visibility = "visible";
                }
                else {
                    let siguiente = document.querySelector(".acciones");
                    siguiente.style.visibility = "collapse";
                }
            }
        }

        async function GetTurnosAvailed() {
            const response = await fetch("https://api.signalr.labsystec.net/api/turno", {
                method: "GET"
            });

            if (response.ok) {
                let data = await response.json();
                let turnosEnEspera = document.querySelector(".turnos-siguientes");

                data.forEach(turno => {
                    if (turno.estado == "Pendiente") {
                        let turnoDiv = document.createElement("div");
                        turnoDiv.classList.add("turno-en-espera");

                        turnoDiv.dataset.id = turno.id;

                        let h3 = document.createElement("h3");
                        h3.innerText = `Folio: ${turno.folio}`;

                        let fecha = new Date(turno.fecha);

                        let p1 = document.createElement("p");
                        p1.innerText = `Fecha: ${fecha.toLocaleDateString()}`;

                        let p2 = document.createElement("p");
                        p2.innerText = `Hora: ${fecha.toLocaleTimeString()}`;

                        turnoDiv.appendChild(h3);
                        turnoDiv.appendChild(p1);
                        turnoDiv.appendChild(p2);

                        turnosEnEspera.appendChild(turnoDiv);
                    }
                });
            }
        }
        

        async function GetCurrentTurno(id) {
            const response = await fetch(`https://api.signalr.labsystec.net/api/turno/bycaja/${id}`, {
                method: "GET",
                headers: {
                    'Authorization': 'Bearer ' + "@Context.Session.GetString("token")"
                }
            });

            if (response.ok) {
                let data = await response.json();

                ShowTurnoActual();

                let div = document.querySelector(".turno-actual");

                let h2 = div.querySelector("h2");
                h2.innerText = `Folio: ${data.folio}`;

                let fecha = new Date(data.fecha);

                let p1 = div.querySelector("p:nth-child(2)");
                p1.innerText = `Fecha: ${fecha.toLocaleDateString()}`;

                let p2 = div.querySelector("p:nth-child(3)");
                p2.innerText = `Hora: ${fecha.toLocaleTimeString()}`;
            }
            else {
                HideTurnoActual();
            }
        }

        async function onSelectCaja() {
            const cajaActual = document.querySelector("#opt-caja");
            const value = cajaActual.value;

            if (value !== "0") {
                cajaSeleccionada = value;
                document.querySelector(".caja-seleccionada-text").innerText = `Caja ${value}`;

                await GetCurrentTurno(value);

                let updateCajaRequest = {
                    "IdCaja": parseInt(value),
                    "IdAdministrador": @(Context.Session.GetString("idusuario"))
                                        }

                await connection.invoke("UpdateCajaState", updateCajaRequest);
            }
            else {
                document.querySelector(".caja-seleccionada-text").innerText = "Sin seleccionar";
            }

            const cajaDiv = document.getElementById('caja');
            cajaDiv.style.visibility = 'hidden';
        }

        async function OnNextTurno() {
            let idCaja = cajaSeleccionada;

            await connection.invoke("UpdateTurnoState", idCaja);

            const turnos = document.querySelectorAll(".turno-en-espera");
            GetCurrentTurno(idCaja);
        }

        async function UpdateEstadisticas() {
            const response = await fetch("https://api.signalr.labsystec.net/api/estadistica");

            if (response.ok) {
                let data = await response.json();

                let estadisticas = document.querySelectorAll(".estadistica");

                document.querySelector(".estadistica-pendientes").innerText = data.cantidadEspera;
                document.querySelector(".estadistica-atendiendo").innerText = data.cantidadAtendiendo;
                document.querySelector(".estadistica-atendidos").innerText = data.cantidadAtendidos;
                document.querySelector(".estadistica-mas-frecuenada").innerText = `Caja ${data.cajaMasFrecuente}`;
                document.querySelector(".estadistica-menos-frecuentada").innerText = `Caja ${data.cajaMenosFrecuente}`;
            }
        }
        async function UpdateEstadisticas2() {
            
            //const response = await fetch(`https://api.signalr.labsystec.net/api/estadistica/EstaHora?hora=${hora}`);
            const response = await fetch(`https://localhost:7129/api/estadistica/EstaHora`);
            // const response = await fetch(`https://localhost:7129/api/estadistica/Hoy?hora=${hora}`, {
            //     method: "GET"
                
            // });

            if (response.ok) {
                let data = await response.json();

                let estadisticas = document.querySelectorAll(".estadistica");

                
               // document.querySelector(".estadistica-promedio-hoy").innerText = data.tiempoPromedioDeEspera;
                document.querySelector(".estadistica-promedio-hora").innerText = data.tiempoPromedioDeEspera;
                document.querySelector(".estadistica-volumen-hora").innerText = data.volumenDeUsuarios;
            }
        }
        async function UpdateEstadisticas3() {
            
            //const response = await fetch(`https://api.signalr.labsystec.net/api/estadistica/Hoy?hora=${hora}`);
            const response = await fetch(`https://localhost:7129/api/estadistica/Hoy`);

            if (response.ok) {
                let data = await response.json();

                let estadisticas = document.querySelectorAll(".estadistica");


                 document.querySelector(".estadistica-promedio-hoy").innerText = data.tiempoPromedioDeEspera;
                //document.querySelector(".estadistica-promedio-hora").innerText = data.tiempoPromedioDeEspera;
                //document.querySelector(".estadistica-volumen-hora").innerText = data.volumenDeUsuarios;
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const divs = document.querySelectorAll(".turno-en-espera");
            const totalDivs = divs.length;
            const maxBlur = 7;

            function applyBlur() {
                divs.forEach((div, i) => {
                    const blurAmount = (maxBlur / totalDivs) * i;
                    div.style.filter = `blur(${blurAmount}px)`;
                });
            }

            function cycleBlur() {
                setTimeout(() => {
                    applyBlur();
                }, 100);
            }

            setInterval(cycleBlur, 1000);

            HideTurnoActual();

            GetTurnosAvailed();
            GetCajasAvailed();
            UpdateEstadisticas();
        });

        const connection = new signalR.HubConnectionBuilder()
            .withUrl("https://api.signalr.labsystec.net/ticketshub", {
                skipNegotiation: true,
                transport: signalR.HttpTransportType.WebSockets,
            })
            .withAutomaticReconnect()
            .build();

        connection.start()
            .then(() => console.log('Conexión iniciada.'))
            .catch(err => console.error('Error al iniciar la conexión: ', err));

        connection.on("NuevoTurno", (turno) => {
            let div = document.querySelector(".turnos-siguientes");

            let turnoDiv = document.createElement("div");
            turnoDiv.classList.add("turno-en-espera");

            turnoDiv.dataset.id = turno.id;

            let h3 = document.createElement("h3");
            h3.innerText = `Folio: ${turno.folio}`;

            let fecha = new Date(turno.fecha);

            let p1 = document.createElement("p");
            p1.innerText = `Fecha: ${fecha.toLocaleDateString()}`;

            let p2 = document.createElement("p");
            p2.innerText = `Hora: ${fecha.toLocaleTimeString()}`;

            turnoDiv.appendChild(h3);
            turnoDiv.appendChild(p1);
            turnoDiv.appendChild(p2);

            div.appendChild(turnoDiv);
        });

        connection.on("CajaActualizada", async (caja) => {
            let div = document.querySelector("#opt-caja");

            let options = div.querySelectorAll("option");

            options.forEach(option => {
                if (option.value !== "0") {
                    div.removeChild(option);
                }
            });

            await GetCajasAvailed();
        });

        connection.on("TurnosActualizados", async (data) => {
            let div = document.querySelector("#opt-caja");

            let options = div.querySelectorAll("option");

            options.forEach(option => {
                if (option.value !== "0") {
                    div.removeChild(option);
                }
            });

            let turnos = document.querySelectorAll(".turno-en-espera");

            turnos.forEach(turno => {
                document.querySelector(".turnos-siguientes").removeChild(turno);
            });

            await GetCajasAvailed();
            await GetTurnosAvailed();
            await UpdateEstadisticas();
            await UpdateEstadisticas2();
            await UpdateEstadisticas3();


        });

        connection.on("CajasCerradas", () => {
            console.log("cajas cerradas");
            HideTurnoActual();
            
            let turnos = document.querySelectorAll(".turno-en-espera");

            turnos.forEach(turno => {
                document.querySelector(".turnos-siguientes").removeChild(turno);
            });

            GetCurrentTurno();
        });
    </script>
</body>
</html>
